python setup.py install
py -m pip uninstall PyCv

python setup.py build_ext
python setup.py develop

cd C:\Users\97254\Documents\MyProjects\PyCv\pycv\_lib\core

printf("offsets is %" NPY_INTP_FMT "\n", (footprint).offsets[jj]);
printf("value is %.2f", value);

printf("[");
for (ii = 0; ii < sz; ii++) {
    printf("%" NPY_INTP_FMT ", ", footprint[ii]);
}
printf("]\n");

//int ops_canny_filter(PyArrayObject *input,
//                     PyArrayObject *output,
//                     PyArrayObject *smooth_kernel,
//                     double low_threshold,
//                     double high_threshold,
//                     PyArrayObject *mask)
//{
//    const npy_intp sobel_shape[2] = {3, 3};
//    const npy_intp sobel_origins[2] = {1, 1};
//    const double dy_kernel[9] = {-0.25, -0.5, -0.25, 0.0, 0.0, 0.0, 0.25, 0.5, 0.25};
//    const double dx_kernel[9] = {-0.25, 0.0, 0.25, -0.5, 0.0, 0.5, -0.25, 0.0, 0.25};
//
//    // base
//    PyArrayObject *smoothed_input;
//    npy_intp nd, array_size, type_num;
//    npy_intp *offsets, of_stride, *of_run, flag;
//    // shift offsets between smooth kernel and sobel kernel if the shapes is different
//    npy_intp of_shift1, of_shift2, of_counter = 3;
//    ArrayIter iter_i, iter_o;
//    char *po_base = NULL, *po = NULL, *pi = NULL;
//    npy_intp smooth_shape[2], smooth_origins[2];
//    npy_intp ii, jj;
//
//    if (!valid_dtype(PyArray_TYPE(input))) {
//        PyErr_SetString(PyExc_RuntimeError, "input dtype not supported");
//        goto exit;
//    }
//    if (!valid_dtype(PyArray_TYPE(output))) {
//        PyErr_SetString(PyExc_RuntimeError, "output dtype not supported");
//        goto exit;
//    }
//    if (!valid_dtype(PyArray_TYPE(smooth_kernel))) {
//        PyErr_SetString(PyExc_RuntimeError, "smooth kernel dtype not supported");
//        goto exit;
//    }
//
//    nd = PyArray_NDIM(input);
//    if (nd != 2) {
//        PyErr_SetString(PyExc_RuntimeError, "canny filter supported just for 2D arrays");
//        goto exit;
//    }
//
//    if (!can_use_same_offsets(input, output)) {
//        PyErr_SetString(PyExc_RuntimeError, "input and output need to have same itemsize, shape and order style");
//        goto exit;
//    }
//
//    for (ii = 0; ii < nd; ii++) {
//        smooth_shape[ii] = PyArray_DIM(smooth_kernel, ii);
//        smooth_origins[ii] = smooth_shape[ii] / 2;
//        if (smooth_shape[ii] < 3) {
//            PyErr_SetString(PyExc_RuntimeError, "smooth kernel shape need to be minimum 3");
//            goto exit;
//        }
//    }
//    of_shift1 = smooth_shape[1] * (smooth_origins[0] - 1) + (smooth_origins[1] - 1);
//    of_shift2 = 2 * (smooth_origins[1] - 1) + 1;
//
//    array_size = PyArray_SIZE(output);
//    type_num = PyArray_TYPE(output);
//
//    if (!init_offsets_lut(output, smooth_shape, NULL, NULL, &offsets, &of_stride, &flag, BORDER_REFLECT)) {
//        goto exit;
//    }
//
//    smoothed_input = (PyArrayObject *)PyArray_NewLikeArray(input, NPY_KEEPORDER, NULL, 1);
//
//}
